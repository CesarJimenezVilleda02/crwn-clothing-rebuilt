{"version":3,"sources":["redux/user/user.types.js","redux/user/user.reducer.js","redux/cart/cart.types.js","redux/cart/cart.utils.js","redux/cart/cart.reducer.js","redux/directory/directory.reducer.js","redux/shop/shop.types.js","redux/shop/shop.reducer.js","redux/root-reducer.js","firebase/firebase.utils.js","redux/shop/shop.actions.js","redux/shop/shop.sagas.js","redux/user/user.actions.js","redux/user/user.sagas.js","redux/cart/cart.actions.js","redux/cart/cart.sagas.js","redux/root.saga.js","redux/store.js","assets/crown.svg","components/menu-item/menu-item.component.jsx","redux/directory/directory.selectors.js","components/directory/directory.component.jsx","pages/homepage/homepage.styles.jsx","pages/homepage/homepage.component.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx","components/custom-button/custom-buttons.style.jsx","components/custom-button/custom-button.component.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.components.jsx","components/collections-overview/collections-overview.container.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","pages/shop/shop.component.jsx","assets/shopping-bag.svg","redux/cart/cart.selectors.js","redux/user/user.selectors.js","components/cart-icon/cart-icon.component.jsx","components/cart-item/cart-item.component.jsx","components/cart-dropdown/cart-dropdown.component.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx","components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.component.jsx","App.js","index.js"],"names":["UserActionTypes","SET_CURRENT_USER","GOOGLE_SIGN_IN_START","EMAIL_SING_IN_START","SING_IN_SUCCESS","SING_IN_FAILURE","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","INITIAL_STATE","currentUser","error","userReducer","state","action","type","payload","CartActionTypes","addItemToCart","cartItems","cartItemToAdd","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter","hidden","cartReducer","item","sections","title","imageUrl","size","directoryReducer","ShopActionTypes","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","collections","isFetching","errorMessage","undefined","shopReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","user","cart","directory","shop","persistReducer","createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","snapShot","console","log","exists","displayName","email","createdAt","Date","set","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","convertCollectionsSnapshotToMap","docs","data","items","routeName","encodeURI","toLowerCase","reduce","accumulator","collection","fetchCollectionsStart","fetchCollectionsSuccess","collectionsMap","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","snapshot","call","put","message","takeLatest","actionTypes","signInSuccess","signInFailure","getSnapshotFromUserAuth","signInWithGoogle","onGoogleSignInStart","signInWithEmail","onEmailSignInStart","isUserAthenticated","onCheckUserSession","signOut","onSignOutStart","userSaga","userSnapShot","signInWithPopup","password","signInWithEmailAndPassword","Promise","resolve","reject","unsubscribe","onAuthStateChanged","all","toggleCartHidden","addItem","clearOnSignOut","onSignOut","cartSaga","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","logger","store","createStore","applyMiddleware","persistor","persistStore","run","_desc","_g","withRouter","history","match","className","onClick","push","url","style","backgroundImage","toUpperCase","selectDirectorySections","createSelector","mapStateToProps","createStructuredSelector","connect","otherProps","HomepageContainer","styled","div","HomePage","selectShop","selectCollections","selectCollectionsForPreview","Object","keys","selectIsCollectionfetching","selectIsCollectionsLoaded","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","buttonStyles","css","invertedButtonStyles","googleSignInStyles","CustomButtonContainer","button","props","isGoogleSignIn","inverted","CustomButton","children","dispatch","name","price","i","other","otherCollectionProps","CollectionsOverviewContainer","compose","collectionsOverview","ownProps","collectionUrlParam","params","collectionId","useEffect","exact","path","component","CollectionOverviewContainer","CollectionPage","_extends","assign","target","arguments","source","prototype","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCrown","_ref","svgRef","titleId","width","height","viewBox","xmlns","xmlnsXlink","ref","stroke","strokeWidth","fill","fillRule","transform","points","fillOpacity","cx","cy","r","_g2","_g3","_g4","_g5","_g6","_g7","_g8","_g9","_g10","_g11","_g12","_g13","_g14","_g15","ForwardRef","selectCart","selectCartItems","selectCartItemsCount","sum","selectCartHidden","selectCartTotal","selectCurrentUser","SvgShoppingBag","x","y","enableBackground","xmlSpace","d","itemCount","CartItem","src","alt","HeaderContainer","LogoContainer","Link","OptionContainerStyles","OptionsContainer","OptionLink","OptionDiv","signOutStart","to","FormInput","handleChange","label","onChange","value","googleSignInStart","emailSignInStart","useState","getCredentials","setCredentials","event","onSubmit","preventDefault","required","SignUp","confirmPassword","handleSubmit","alert","createUserWithEmailAndPassword","SignInAndSignOut","clearItemFromCart","increaseQuantity","decreaseQuantity","removeItem","StripeCheckoutButton","priceForStripe","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","method","then","res","catch","JSON","parse","stripeKey","cartTotal","checkUserSession","ShopPage","render","CheckoutPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d9b0c574.chunk.js","sourcesContent":["//es mejor practica guardar los tipos en un objeto para que sean consistentes\r\nconst UserActionTypes = {\r\n    SET_CURRENT_USER: 'SET_CURRENT_USER',\r\n    GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\r\n    EMAIL_SING_IN_START: 'EMAIL_SING_IN_START',\r\n    SING_IN_SUCCESS: 'SING_IN_SUCCESS',\r\n    SING_IN_FAILURE: 'SING_IN_FAILURE',\r\n    CHECK_USER_SESSION: 'CHECK_USER_SESSION',\r\n    SIGN_OUT_START: 'SIGN_OUT_START',\r\n    SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\r\n    SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\r\n};\r\n\r\nexport default UserActionTypes;\r\n","//funcion con ds propiedades, e ultimo estado o el inicial y la accion(objeto con tipo y la carga)\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\n//a la primera no va a haber estado por lo que debemos hacer uno inicial\r\nconst INITIAL_STATE = {\r\n    currentUser: null,\r\n    error: null,\r\n};\r\n\r\n//VALOR POR DEFECTO PARA EL ARGUMENTO, NUNCA ESTARÁ INDEFINIDO\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    //dependiendo e¿del tipo es cómo regresa todo\r\n    switch (action.type) {\r\n        // todos los reducers reciben todas las acciones\r\n        case UserActionTypes.SING_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                error: null,\r\n            };\r\n        case UserActionTypes.SIGN_OUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentUser: null,\r\n                error: null,\r\n            };\r\n        case UserActionTypes.SING_IN_FAILURE:\r\n        case UserActionTypes.SIGN_OUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ahora lo pasamos al root\r\nexport default userReducer;\r\n","export const CartActionTypes = {\r\n    TOGGLE_CART_HIDDEN: 'TOGGLE_CART_HIDDEN',\r\n    ADD_ITEM: 'ADD_ITEM',\r\n    CLEAR_ITEM_FROM_CART: 'CLEAR_ITEM_FROM_CART',\r\n    REMOVE_ITEM: 'REMOVE_ITEM',\r\n    CLEAR_CART: 'CLEAR_CART',\r\n};\r\n","export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n    const existingCartItem = cartItems.find((cartItem) => cartItem.id === cartItemToAdd.id);\r\n\r\n    if (existingCartItem) {\r\n        return cartItems.map((cartItem) =>\r\n            cartItem.id === cartItemToAdd.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem\r\n        );\r\n    }\r\n\r\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    // console.log('fired');\r\n    const existingCartItem = cartItems.find((cartItem) => cartItem.id === cartItemToRemove.id);\r\n\r\n    if (existingCartItem.quantity === 1) {\r\n        return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\r\n    }\r\n\r\n    return cartItems.map((cartItem) =>\r\n        cartItem.id === cartItemToRemove.id ? { ...cartItem, quantity: cartItem.quantity - 1 } : cartItem\r\n    );\r\n};\r\n\r\n// export const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n//     const existingCartItem = cartItems.find((cartItem) => cartItem.id === cartItemToRemove.id);\r\n\r\n//     if (existingCartItem.quantity === 1) {\r\n//         // return []\r\n//         return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\r\n//     }\r\n\r\n//     // return [];\r\n//     return cartItems.map((cartItem) =>\r\n//         cartItem.id === cartItemToRemove.id ? { ...cartItem, quantity: cartItem.quantity - 1 } : cartItem\r\n//     );\r\n// };\r\n","import { CartActionTypes } from './cart.types';\r\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: [],\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden,\r\n            };\r\n        case CartActionTypes.ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: addItemToCart(state.cartItems, action.payload),\r\n            };\r\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n            return {\r\n                ...state,\r\n                //nos regresa lo que nos dé true en un nuevo arreglo\r\n                cartItems: state.cartItems.filter((item) => item.id !== action.payload.id),\r\n            };\r\n\r\n        case CartActionTypes.REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: removeItemFromCart(state.cartItems, action.payload),\r\n            };\r\n        case CartActionTypes.CLEAR_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cartReducer;\r\n","const INITIAL_STATE = {\r\n    sections: [\r\n        {\r\n            title: 'hats',\r\n            imageUrl: 'https://i.ibb.co/cvpntL1/hats.png',\r\n            id: 'shop/hats',\r\n        },\r\n        {\r\n            title: 'jackets',\r\n            imageUrl: 'https://i.ibb.co/px2tCc3/jackets.png',\r\n            id: 'shop/jackets',\r\n        },\r\n        {\r\n            title: 'sneakers',\r\n            imageUrl: 'https://i.ibb.co/0jqHpnp/sneakers.png',\r\n            id: 'shop/sneakers',\r\n        },\r\n        {\r\n            title: 'womens',\r\n            imageUrl: 'https://i.ibb.co/GCCdy8t/womens.png',\r\n            size: 'large',\r\n            id: 'shop/womens',\r\n        },\r\n        {\r\n            title: 'mens',\r\n            imageUrl: 'https://i.ibb.co/R70vBrQ/men.png',\r\n            size: 'large',\r\n            id: 'shop/mens',\r\n        },\r\n    ],\r\n};\r\n\r\n//solo queremos que regrese algo\r\nconst directoryReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default directoryReducer;\r\n","const ShopActionTypes = {\r\n    FETCH_COLLECTIONS_START: 'FETCH_COLLECTIONS_START',\r\n    FETCH_COLLECTIONS_SUCCESS: 'FETCH_COLLECTIONS_SUCCESS',\r\n    FETCH_COLLECTIONS_FAILURE: 'FETCH_COLLECTIONS_FAILURE',\r\n};\r\n\r\nexport default ShopActionTypes;\r\n","import ShopActionTypes from './shop.types';\r\n\r\nconst INITIAL_STATE = {\r\n    collections: null,\r\n    // nuevo isLoading\r\n    isFetching: false,\r\n    errorMessage: undefined,\r\n};\r\n\r\nconst shopReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case ShopActionTypes.FETCH_COLLECTIONS_START:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            };\r\n        case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                collections: action.payload,\r\n            };\r\n        case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                errorMessage: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default shopReducer;\r\n","//va a ser lo que combina todos los states, que luego se rompen en secciones individuales\r\nimport { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; //con esto sacamos el local storage\r\n// import sessionstorage from 'redux-persist/lib/storage'; //estos folders no son los reales, son representacion\r\n//con esto sacamos el session\r\n\r\nimport userReducer from './user/user.reducer';\r\nimport cartReducer from './cart/cart.reducer';\r\nimport directoryReducer from './directory/directory.reducer';\r\nimport shopReducer from './shop/shop.reducer';\r\n\r\n//esto solo será el json con la configuracion de lo que vamos a querer hacer con el persist\r\nconst persistConfig = {\r\n    //a partir de donde queremos guardar las cosas\r\n    key: 'root',\r\n    storage,\r\n    //aqui van a ir los nombres en caracter de lo queremos guardar\r\n    whitelist: ['cart'], //no hay razón para persistir el user, ese ya lo maneja el auth\r\n};\r\n\r\n//las keys son los reducers para cada parte y con el combine reducers vamos a generar\r\n//todo el state es un objeto gigante, el combine reducers va a juntar todos los states generados por los reducers\r\n// export default combineReducers({\r\n//     user: userReducer,\r\n//     cart: cartReducer,\r\n// });\r\n\r\n//USANDO EL PERSIST\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    cart: cartReducer,\r\n    directory: directoryReducer,\r\n    shop: shopReducer,\r\n});\r\n\r\n//esto va a dar el root modificado con la configuracion, es el root pero con el local storage linkeado\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","//para que los metodos funcionen debe de estar la config, siempre debe de estar\r\nimport firebase from 'firebase/app';\r\n//para la base de datos\r\nimport 'firebase/firestore';\r\n//para la autenticacion\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: 'AIzaSyDk-I9JJMVPgU2tKJSz9p2jjuSdbeozgVY',\r\n    authDomain: 'crown-clothing-optimized.firebaseapp.com',\r\n    projectId: 'crown-clothing-optimized',\r\n    storageBucket: 'crown-clothing-optimized.appspot.com',\r\n    messagingSenderId: '314539564846',\r\n    appId: '1:314539564846:web:b7efa52f9a60420a45e4bf',\r\n    measurementId: 'G-T7C61HNW6W',\r\n};\r\n\r\n//debe de ser async, le pasamos lo que nos da el auth, additional va a ser cualquier dato adicional que queramos guardar\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    //si existe el user vamos a hacer una query, esto es un ejemplo de una referencia como respuesta\r\n    // console.log(firestore.doc('users/7edhakjdbkadb')); //como se puede ver regresa un objeto con informacion\r\n    //del estado actual\r\n    // console.log(userAuth);\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`); //referencia del luar en la base\r\n    const snapShot = await userRef.get(); //si ya existen datos vamos a saber si alguien ya se registró aqui\r\n    console.log(snapShot); //j\r\n    //como hasta ahorta no existe regresa con la propiedad exists con un valor de false\r\n\r\n    //si no existen datos en ese lugar se crea uno nuevo en ese lugar\r\n    //aunque recarguemos el código esto no cambia porque nuestro código checa si ya existe\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.log('error creating user', error);\r\n        }\r\n    }\r\n\r\n    return userRef;\r\n};\r\n\r\n//para que inicie el firebase en el proyecto y se conecte al nuestro\r\n// firebase.initializeApp(config);\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(config);\r\n} else {\r\n    firebase.app(); // if already initialized, use that one\r\n}\r\n\r\n//para usar el auth en todos lados\r\nexport const auth = firebase.auth();\r\n//para usar el firestore\r\nexport const firestore = firebase.firestore();\r\n\r\n//se crea un nuevo objeto\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\n//estos parametros definen lo que pasa, queremos que siempre aga la popup cuando usemos el googleauth\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\n\r\n//toma al objeto provider y llama al popup que nos da el auth de google, solo queda configuar el auth\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n\r\n////////firebase parte 2\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    // creamos documento con la key\r\n    const collectionRef = firestore.collection(collectionKey);\r\n\r\n    // solo podemos hacer un set a la vez\r\n    //si se va el internet solo uno serviría por lo que tenemos que agrupar todas\r\n    //las llamadas para que no se queden a medias, para juntarlas usamos batch\r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach((obj) => {\r\n        // lo que va a hacer firebase al llamarlo vacío es crear un id aleatorio\r\n        // tambien podemos pasar un argumento para que esa sea la llave\r\n        const newDocRef = collectionRef.doc();\r\n\r\n        // esto los va juntando\r\n        batch.set(newDocRef, obj);\r\n    });\r\n\r\n    // esto regresa una promesa\r\n    return await batch.commit();\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n    // vamos a crear la forma de transoformar las collecciones con las propiedades buenas\r\n    // la colleccion regresa en la propiedad docs los documentos\r\n    const transformedCollection = collections.docs.map((doc) => {\r\n        const { title, items } = doc.data();\r\n\r\n        return {\r\n            // le pasas una string que transofrma los caracteres que no soporta una url\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            items,\r\n            id: doc.id,\r\n            title,\r\n        };\r\n    });\r\n\r\n    // creamos un objeto donde el titulo es la key de la coleccion\r\n    return transformedCollection.reduce((accumulator, collection) => {\r\n        accumulator[collection.title.toLowerCase()] = collection;\r\n        return accumulator;\r\n    }, {});\r\n};\r\n\r\n// checar el auth\r\nexport const getCurrentUsermINE = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n            // se elimina el oyente\r\n            unsubscribe();\r\n            // se resuelve regresando el auth\r\n            resolve(userAuth);\r\n        }, reject());\r\n    });\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n            unsubscribe();\r\n            resolve(userAuth);\r\n        }, reject);\r\n    });\r\n};\r\n","import ShopActionTypes from './shop.types';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage,\r\n});\r\n\r\n// el thunk nos deja hacer funciones que mandan funciones al reducer desde una sola\r\n// la forma en que el thunk sabe cuál ignorar es por que el return es una función\r\nexport const fetchCollectionStartAsync = () => {\r\n    // importante pasar el dispatch\r\n    return (dispatch) => {\r\n        const collectionRef = firestore.collection('collections');\r\n        // esto se puede gracias a redux-thunk\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef\r\n            .get()\r\n            .then((snapshot) => {\r\n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\r\n                // despacha esto al reducer que ve quepedo\r\n                dispatch(fetchCollectionsSuccess(collectionsMap));\r\n            })\r\n            .catch((err) => dispatch(fetchCollectionsFailure(err)));\r\n    };\r\n};\r\n","// queremos mover lo del thunk a sagas\r\n// los effects nos dejan hacer distintas cosas con las sagas\r\n\r\n// el proposito del middleware es correr todas las sagas al mismo tiempo sin pausar\r\n// la ejecución y poder bloquear cuando algo está pasando si llega la misma accion nuevamente\r\n// para eso son los yields, le dan el control al middleware para cancelar las tasks en esos puntos\r\n\r\n// escuha todas las acciones de este tipo -- call es el efecto que invoca un método\r\nimport { takeEvery, call, put, takeLatest } from '@redux-saga/core/effects';\r\n// put es el effecto que hace y manda acciones\r\nimport actionTypes from './shop.types';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\n// todas las funciones generador deben tener un yield\r\nexport function* fetchCollectionsAsync() {\r\n    // yield console.log('I am fired');\r\n    try {\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        //en vez de tener que usar el then, la resolución el yield es como el await y le da el valor al snapshot\r\n\r\n        // efecto que invoca funciones que podrían tardra, entra la función y luego argumentos\r\n        // todo esto lo hacemos para seguir poniendo puntos donde parar el desmadre\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n        // para errores vamos a usar lo mismo que en async, un try catch\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    // va a pausar cuando una accion llega\r\n    // cuando llega el tipo start, hace lo del fetchCollectionAsync\r\n    yield takeLatest(actionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\r\n    // crea un llamada que no bloque la app, no pausa el javascript que esta en el async\r\n}\r\n","import UserActionTypes from './user.types';\r\n\r\n//cada objeto debe de estar en el formato adecuado de action y payload para funcionar\r\nexport const setCurrentUser = (user) => ({\r\n    type: UserActionTypes.SET_CURRENT_USER,\r\n    payload: user,\r\n});\r\n\r\nexport const googleSignInStart = () => ({\r\n    type: UserActionTypes.GOOGLE_SIGN_IN_START,\r\n});\r\n\r\nexport const signInSuccess = (user) => ({\r\n    type: UserActionTypes.SING_IN_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const signInFailure = (error) => ({\r\n    type: UserActionTypes.SING_IN_FAILURE,\r\n    payload: error,\r\n});\r\n\r\nexport const emailSignInStart = (emailAndPassword) => ({\r\n    type: UserActionTypes.EMAIL_SING_IN_START,\r\n    payload: emailAndPassword,\r\n});\r\n\r\nexport const checkUserSession = () => ({\r\n    type: UserActionTypes.CHECK_USER_SESSION,\r\n});\r\n\r\nexport const signOutStart = () => ({\r\n    type: UserActionTypes.SIGN_OUT_START,\r\n});\r\nexport const signOutSuccess = () => ({\r\n    type: UserActionTypes.SIGN_OUT_SUCCESS,\r\n});\r\nexport const signOutFailure = (error) => ({\r\n    type: UserActionTypes.SING_IN_FAILURE,\r\n    payload: error,\r\n});\r\n","import { put, all, call } from '@redux-saga/core/effects';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nimport { provider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\r\n\r\n// vamos a escuchar al start del sign in\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const user = userAuth;\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        console.log(userRef);\r\n        const userSnapShot = yield userRef.get();\r\n\r\n        yield put(signInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        // es yield porque queremos el valor del sign in\r\n        const { user } = yield auth.signInWithPopup(provider);\r\n        // se le pasa el provider, asi debe de ser con firebase\r\n        yield call(getSnapshotFromUserAuth, user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SING_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* isUserAthenticated() {\r\n    try {\r\n        // no hay forma en promesa de saber si esta autenticadp\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        // como nos va a regresar el auth\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n        yield put(signInFailure());\r\n    }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAthenticated);\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\r\n}\r\n","import { CartActionTypes } from './cart.types';\r\n\r\nexport const toggleCartHidden = () => ({\r\n    type: CartActionTypes.TOGGLE_CART_HIDDEN,\r\n    // EL PAYLOAD DE HECHO ES OPCIONAL, COMO NO SE USA PUES NO HAY PEDO\r\n});\r\n\r\nexport const addItem = (item) => ({\r\n    type: CartActionTypes.ADD_ITEM,\r\n    payload: item,\r\n});\r\n\r\nexport const clearItemFromCart = (item) => ({\r\n    type: CartActionTypes.CLEAR_ITEM_FROM_CART,\r\n    payload: item,\r\n});\r\n\r\nexport const removeItem = (item) => {\r\n    console.log(item);\r\n    return {\r\n        type: CartActionTypes.REMOVE_ITEM,\r\n        payload: item,\r\n    };\r\n};\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: CartActionTypes.CLEAR_CART,\r\n    };\r\n};\r\n","import { all, takeLatest, put } from 'redux-saga/effects';\r\nimport UserActionTypes from '../user/user.types';\r\n\r\nimport { clearCart } from './cart.actions';\r\n\r\nexport function* clearOnSignOut() {\r\n    yield put(clearCart());\r\n}\r\n\r\n// va a escuchar las acciones que crea el user\r\nexport function* onSignOut() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearOnSignOut);\r\n}\r\n\r\nexport function* cartSaga() {\r\n    yield all([onSignOut()]);\r\n}\r\n","// De acá se van a correr todas las sagas de los distintos concearns\r\nimport { all, call } from 'redux-saga/effects';\r\n\r\nimport { fetchCollectionsStart } from './shop/shop.sagas';\r\nimport { userSaga } from './user/user.sagas';\r\nimport { cartSaga } from './cart/cart.sagas';\r\n\r\nexport default function* rootSaga() {\r\n    // recibe un array con las sagas que se van a correr llamadas, las corre de forma concurrente\r\n    yield all([call(fetchCollectionsStart), call(userSaga), call(cartSaga)]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\n//le ponemos el middleware al store para atrapar las acciones de la store y poder verlas\r\nimport { persistStore } from 'redux-persist'; //importamos la funcion que permite guardar sesion\r\n//asi podemos cachear el state\r\n\r\n// para usar thunk lo importamos y lo metemos en el arrego de middlewares\r\nimport thunk from 'redux-thunk';\r\n\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\n// shagas\r\nimport createSagaMiddleware from '@redux-saga/core';\r\n\r\n// importamos la saga que queremos usar\r\nimport { fetchCollectionsStart } from './shop/shop.sagas';\r\nimport rootSaga from './root.saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware(); //aqui van unas opciones qu eno vamos a ocupar\r\n\r\n// reemplazamos saga por thunk porque lo vamos a usar\r\nconst middlewares = [logger, sagaMiddleware];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// adentro del run pasamos las sags\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// lo que hacemos con sagss es ponerlas en los mismos folders que sus concearns\r\n","var _desc, _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCrown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"50px\",\n    height: \"39px\",\n    viewBox: \"0 0 50 39\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Group\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"WiP\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Artboard\",\n    transform: \"translate(-90.000000, -38.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\",\n    transform: \"translate(90.000000, 38.000000)\"\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    id: \"Rectangle\",\n    fill: \"#808282\",\n    points: \"3 14 25 26.5 47 14 40.855176 39 9.08421785 39\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    id: \"Triangle\",\n    fillOpacity: 0.262838724,\n    fill: \"#101A1A\",\n    points: \"25 8 40 39 10 39\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Oval\",\n    fill: \"#5E6363\",\n    cx: 2,\n    cy: 9,\n    r: 2\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Oval\",\n    fill: \"#5E6363\",\n    cx: 25,\n    cy: 2,\n    r: 2\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Oval\",\n    fill: \"#5E6363\",\n    cx: 48,\n    cy: 9,\n    r: 2\n  }))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCrown);\nexport default __webpack_public_path__ + \"static/media/crown.3a4e2b15.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n//with router es un componente de ato orden --- es como una funcion toma un componente como argumento\r\n//y te regresa un componente modificado\r\nimport { withRouter } from 'react-router-dom';\r\nimport './menu-item.styles.scss';\r\n\r\n// con el destructuring lo sacamos del objeto props que llega con las propiedades spredeadas\r\nconst MenuItem = ({ title, imageUrl, size, history, match, id }) => {\r\n    // console.log(match.url);\r\n    return (\r\n        //no sabemos en donde estaremos en nuestro directorio, por lo que usaremos la url del match\r\n        //recordemos que esta url se define por el match qu ehace en primera instancia el routing con\r\n        //las urls de cada componente\r\n        <div className={`menu-item ${size}`} onClick={() => history.push(`${match.url}${id}`)}>\r\n            <div\r\n                className='background-image'\r\n                style={{\r\n                    backgroundImage: `url(${imageUrl})`,\r\n                }}></div>\r\n\r\n            <div className='content'>\r\n                {/* claro que también se podría con el text transform */}\r\n                <h1 className='title'>{title.toUpperCase()}</h1>\r\n                <span className='subtitle'>{'Shop Now'.toUpperCase()}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n//lo pasamos como argumento y nos regresa un componente superpoderoso con acceso a los props y con esto\r\n//ganamos acceso a history\r\nexport default withRouter(MenuItem);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectDirectory = (state) => state.directory;\r\n\r\nexport const selectDirectorySections = createSelector([selectDirectory], (directory) => directory.sections);\r\n","import React from 'react';\r\nimport './directory.styles.scss';\r\nimport MenuItem from '../menu-item/menu-item.component';\r\nimport { connect } from 'react-redux';\r\n//metemos el selector para namas jalar una parte\r\nimport { selectDirectorySections } from '../../redux/directory/directory.selectors';\r\n//el que no se va a dejar combinar\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nconst Directory = ({ sections }) => (\r\n    // <div className='directory-menu'>\r\n    //     {this.state.sections.map((section) => {\r\n    //         <MenuItem id={section.id} imageUrl={section.imageUrl} title={section.imageUrl} />;\r\n    //     })}\r\n    // </div>\r\n    //recordemos que se pueden desestructurar los objetos que llegan y se reducen a las variables con los nombres de\r\n    //sus propiedades\r\n    <div className='directory-menu'>\r\n        {sections.map(({ id, ...otherProps }) => {\r\n            console.log(id);\r\n            //esto sería el equivalente a pasar todo como en el anterior, pasan con su mismo nombre\r\n            return <MenuItem key={id} id={id} {...otherProps} />;\r\n        })}\r\n        {/* {this.state.sections.map(({ title, imageUrl, id, size }) => (\r\n                    <MenuItem key={id} title={title} imageUrl={imageUrl} size={size} />\r\n                ))} */}\r\n    </div>\r\n);\r\n\r\n//lega el estado por el connect\r\n// const mapStateToProps = (state) => ({\r\n//     sections: state.directory,\r\n// });\r\nconst mapStateToProps = createStructuredSelector({\r\n    sections: selectDirectorySections,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Directory);\r\n","import styled from \"styled-components\";\r\n\r\n// como componente usamos la convencion\r\nexport const HomepageContainer = styled.div`    \r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n`\r\n\r\n","import React from 'react';\r\nimport Directory from '../../components/directory/directory.component';\r\n\r\n// import './homepage.styles.scss';\r\n\r\nimport {HomepageContainer} from \"./homepage.styles\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        // antes esto era un div\r\n        <HomepageContainer className='homepage'>\r\n            <Directory />\r\n        </HomepageContainer>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import { createSelector } from 'reselect';\r\n\r\n//usamos este objeto porque el parametro del url es una cadena y queremos que corresponda al numero de\r\n//colleccion\r\n// const COLLECTION_ID_MAP = {\r\n//     hats: 1,\r\n//     sneakers: 2,\r\n//     jackets: 3,\r\n//     womens: 4,\r\n//     mens: 5,\r\n// };\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector([selectShop], (shop) => shop.collections);\r\n\r\n//en el overview estamos usando un array, hay que regresarlo como un arreglo en evz de un objeto\r\nexport const selectCollectionsForPreview = createSelector([selectCollections], (collections) =>\r\n    //recordemos que el keys nos regresa siempre un arreglo con cadenas de caracteres de los nombres de las propiedades\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\r\n);\r\n\r\n//hay que encontrar el id que hace match con el collectionidmap\r\nexport const selectCollection = (collectionUrlParam) =>\r\n    createSelector(\r\n        [selectCollections],\r\n        (collections) =>\r\n            // nos va a regresar el elemento que de true\r\n            // collections.find((collection) => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\r\n            //con el data normalization ya lo pasamos a un objeto, data nprmalization es guardar las cosas\r\n            //en objetos en vez de arreglos\r\n            collections ? collections[collectionUrlParam] : null\r\n        // como no hay en un inicio se tripea cuando vamos a una página en específico, por eso al montarse\r\n        // da error, como al inicio no ha llegado puede que esté en un estado en el que no hay datos, por eso\r\n        // en el tiempo de carga haremos un spinner\r\n    );\r\n//aqui pasa el currying que es una funcion que regresa otra funcion\r\n\r\nexport const selectIsCollectionfetching = createSelector([selectShop], (shop) => shop.isFetching);\r\n\r\n// !! en cualquier falsy nos regresa el falsy de verdad\r\nexport const selectIsCollectionsLoaded = createSelector([selectShop], (shop) => !!shop.collections);\r\n","import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n    height: 60vh;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 50px;\r\n    border: 3px solid rgba(195, 195, 195, 0.6);\r\n    border-radius: 50%;\r\n    border-top-color: #636767;\r\n    animation: spin 1s ease-in-out infinite;\r\n    -webkit-animation: spin 1s ease-in-out infinite;\r\n    @keyframes spin {\r\n        to {\r\n            -webkit-transform: rotate(360deg);\r\n        }\r\n    }\r\n    @-webkit-keyframes spin {\r\n        to {\r\n            -webkit-transform: rotate(360deg);\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { SpinnerOverlay, SpinnerContainer } from './with-spinner.styles';\r\n\r\n// hacemos un nuevo componente, una funcion que toma un componente y le dota una funcionalidad\r\nconst WithSpinner =\r\n    // este es el que llega\r\n\r\n    // el shop component es el que va a saber si hay o no hay datos porque a el le llegan, por\r\n    // eso la logica del with spinner la pondremos ahí\r\n\r\n\r\n        (WrappedComponent) =>\r\n        // basado en la propiedad que trae el wrapped nos llegan estas\r\n        ({ isLoading, ...otherProps }) => {\r\n            // se retorna dinamicamente el spinner o el que llega\r\n            return isLoading ? (\r\n                <SpinnerOverlay>\r\n                    <SpinnerContainer />\r\n                </SpinnerOverlay>\r\n            ) : (\r\n                <WrappedComponent {...otherProps} />\r\n            );\r\n        };\r\n\r\n// de otra forma\r\nconst WithSpinner2 = (WrappedComponent) => {\r\n    const Spinner = ({ isLoading, ...otherProps }) => {\r\n        return isLoading ? (\r\n            <SpinnerOverlay>\r\n                <SpinnerContainer />\r\n            </SpinnerOverlay>\r\n        ) : (\r\n            <WrappedComponent {...otherProps} />\r\n        );\r\n    };\r\n    return Spinner;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst buttonStyles = css`\r\n  background-color: black;\r\n  color: white;\r\n  border: none;\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n\r\nconst invertedButtonStyles = css`\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n  &:hover {\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst googleSignInStyles = css`\r\n  background-color: #4285f4;\r\n  color: white;\r\n  &:hover {\r\n    background-color: #357ae8;\r\n    border: none;\r\n  }\r\n`;\r\n\r\n// de forma dinámica y usando los props ya podemos determinar cómo se verá\r\nconst getButtonStyles = props => {\r\n  if (props.isGoogleSignIn) {\r\n    return googleSignInStyles;\r\n  }\r\n\r\n  return props.inverted ? invertedButtonStyles : buttonStyles;\r\n};\r\n\r\nexport const CustomButtonContainer = styled.button`\r\n  min-width: 165px;\r\n  width: auto;\r\n  height: 50px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 50px;\r\n  padding: 0 35px 0 35px;\r\n  font-size: 15px;\r\n  text-transform: uppercase;\r\n  font-family: 'Open Sans Condensed';\r\n  font-weight: bolder;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  ${getButtonStyles}\r\n`;","import React from 'react';\r\n\r\n// import './custom-button.styles.scss';\r\n\r\n// recordemos que los estilos especiales ya se los metimos con la función\r\nimport { CustomButtonContainer } from './custom-buttons.style';\r\n\r\nconst CustomButton = ({children, ...props}) => {\r\n    // si pasamos un tipo submit este le va a llegar al boton\r\n    // como ya no tiene la clase custom button se rompe la shop page porque ya no se encuentra \r\n    // donde aplicar el estilp con el absolute\r\n    return (\r\n        <CustomButtonContainer {...props}>\r\n            {children}\r\n        </CustomButtonContainer>\r\n    );\r\n};\r\n\r\nexport default CustomButton;\r\n// const CustomButton = (props, {children}) => {\r\n//     // si pasamos un tipo submit este le va a llegar al boton\r\n//     return (\r\n//         <CustomButtonContainer {...props}>\r\n//             {children}\r\n//         </CustomButtonContainer>\r\n//     );\r\n// };\r\n\r\n// export default CustomButton;\r\n","import React from 'react';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nimport './collection-item.styles.scss';\r\n\r\nconst CollectionItem = ({ id, name, price, imageUrl, addItem }) => {\r\n    //la forma de yihua era abstraer todo en el collection preview para que llegue el item completo\r\n    // const addItemToCart = () => {\r\n    //     addItem({ id, name, price, imageUrl });\r\n    // };\r\n\r\n    return (\r\n        <div key={id} className='collection-item'>\r\n            <div className='image' style={{ backgroundImage: `url(${imageUrl})` }}></div>\r\n            <div className='collection-footer'>\r\n                <span className='name'>{name}</span>\r\n                <span className='price'>${price}</span>\r\n            </div>\r\n            {/* recordemos que podemos pasar funciones anónimas dentro de los onclicks, etc. */}\r\n            <CustomButton className=\"custom-button\" inverted onClick={() => addItem({ id, name, price, imageUrl })}>\r\n                Add to cart\r\n            </CustomButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\nimport './collection-preview.styles.scss';\r\n\r\n// //cada vez que se llama el componente se hace la operacion del filtro\r\n// //hay que recordar que cada vez que se llama una funcion se llama con dada rendereada del componente\r\nconst CollectionPreview = ({ title, items, history, match }) => {\r\n    // const { history, match, title, items } = props;\r\n    return (\r\n        <div className='collection-preview'>\r\n            <h1 className='title' onClick={() => history.push(`${match.url}/${title.toLowerCase()}`)}>\r\n                {title.toUpperCase() + ' >'}\r\n            </h1>\r\n            <div className='preview'>\r\n                {items\r\n                    //solo nos aparezcan los primeros 4 items\r\n                    .filter((item, i) => i < 4)\r\n                    .map(({ id, ...other }) => (\r\n                        <CollectionItem key={id} {...other} id={id} />\r\n                    ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(CollectionPreview);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport CollectionPreview from '../collection-preview/collection-preview.component';\r\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\r\n\r\nimport './collections-overview.styles.scss';\r\n\r\nconst CollectionsOverview = ({ collections }) => (\r\n    <div className='collections-overview'>\r\n        {collections.map(({ id, ...otherCollectionProps }) => (\r\n            <CollectionPreview key={id} {...otherCollectionProps} />\r\n        ))}\r\n    </div>\r\n);\r\n\r\n//como lo cambiamos a objeto anteriormente ahora lo sacamos como un arreglo con el nuevo selector\r\nconst mapStateToProps = createStructuredSelector({\r\n    collections: selectCollectionsForPreview,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);\r\n","// va a ser un componente que va a envolver al componente\r\n// import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { compose } from 'redux';\r\n\r\nimport { selectIsCollectionfetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport collectionsOverview from './collections-overview.components';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: selectIsCollectionfetching,\r\n});\r\n\r\n// le va a pasar los props al withspinner y luego le mete el collectionsoverview\r\nconst CollectionsOverviewContainer = compose(connect(mapStateToProps), WithSpinner)(collectionsOverview);\r\n\r\nexport default CollectionsOverviewContainer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport './collection.styles.scss';\r\n\r\n//ahora tenemoe el match que nos llega de la shop\r\nconst CollectionPage = ({ match, collection }) => {\r\n    const { items, title } = collection;\r\n\r\n    // console.log(match.params.collectionId);\r\n    //---> llega el url hasta aqui y un atributo params que guarda un objeto con la probiedad categoryId\r\n    //vamos a usar este parametro para\r\n    // console.log(collection);\r\n    return (\r\n        <div className='collection-page'>\r\n            <h2 className='title'>{title}</h2>\r\n            <div className='items'>\r\n                {items.map((item) => (\r\n                    <CollectionItem key={item.id} {...item} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n//el primer argumento del mapstate siempre es el state que inyectamos, el segundo siempre son los props que llegan\r\n//por accion de otros componentes al nuestro\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    //lo que estamos haciendo es que el selector recibe un argumento que\r\n    //pasa por todos los selectores anteriores hasta afectar el resultado del selector\r\n    collection: selectCollection(ownProps.match.params.collectionId)(state), //como regresa una funcion le metemos el estado\r\n    //lo que pasa aqui es que nos regresa un createselector que crea una funcion que recibe el estado, por lo que\r\n    //debemos de volver a meter el estado para que pase por cualquier selector que lo ocupe\r\n    //BASICAMENTE: nos regresa la cadena de selectores y a esos hay que meterles el estado, que luego cuando llega a\r\n    //el que no sinteresa a través del flow ya llega acortado y usa el collectionid\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","// va a ser un componente que va a envolver al componente\r\n// import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { compose } from 'redux';\r\n\r\nimport { selectIsCollectionfetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport collection from './collection.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: (state) => !selectIsCollectionsLoaded(state),\r\n});\r\n\r\n// le va a pasar los props al withspinner y luego le mete el collectionsoverview\r\nconst CollectionsOverviewContainer = compose(connect(mapStateToProps), WithSpinner)(collection);\r\n\r\nexport default CollectionsOverviewContainer;\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport CollectionOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport { connect } from 'react-redux';\r\n// import { updateCollections } from '../../redux/shop/shop.actions';\r\nimport CollectionPage from '../collection/collection.container';\r\nimport './shop.styles.scss';\r\n\r\n// cambiamos esto por la accion que manda el typo del payload al que escuchamos\r\n// import { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\n\r\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\r\n    useEffect(() => {\r\n        fetchCollectionsStart();\r\n    }, [fetchCollectionsStart]);\r\n    // si el padre llama su re-render, el use-effect de este se va a llamar dos veces si tiene e array vacío o no lo\r\n    // tiene, como sabemos que el fetch no cambia pues no va a re-renderear varias veces\r\n\r\n    return (\r\n        <div className='shop-page'>\r\n            <Route\r\n                exact\r\n                path={`${match.path}`}\r\n                // lo regresamos a componente porque ya no es necesario pasarle nada\r\n                component={CollectionOverviewContainer}\r\n            />\r\n            <Route exact path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgShoppingBag(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 407.453 407.453\",\n    style: {\n      enableBackground: \"new 0 0 407.453 407.453\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#010002\"\n    },\n    d: \"M255.099,116.515c4.487,0,8.129-3.633,8.129-8.129c0-4.495-3.642-8.129-8.129-8.129H143.486 c-4.487,0-8.129,3.633-8.129,8.129c0,4.495,3.642,8.129,8.129,8.129H255.099z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#010002\"\n    },\n    d: \"M367.062,100.258H311.69c-4.487,0-8.129,3.633-8.129,8.129c0,4.495,3.642,8.129,8.129,8.129h47.243 v274.681H48.519V116.515h44.536c4.487,0,8.129-3.633,8.129-8.129c0-4.495-3.642-8.129-8.129-8.129H40.391 c-4.487,0-8.129,3.633-8.129,8.129v290.938c0,4.495,3.642,8.129,8.129,8.129h326.671c4.487,0,8.129-3.633,8.129-8.129V108.386 C375.191,103.891,371.557,100.258,367.062,100.258z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#010002\"\n    },\n    d: \"M282.59,134.796c4.487,0,8.129-3.633,8.129-8.129V67.394C290.718,30.238,250.604,0,201.101,0 c-49.308,0-89.414,30.238-89.414,67.394v59.274c0,4.495,3.642,8.129,8.129,8.129s8.129-3.633,8.129-8.129V67.394 c0-28.198,32.823-51.137,73.36-51.137c40.334,0,73.157,22.939,73.157,51.137v59.274 C274.461,131.163,278.095,134.796,282.59,134.796z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#010002\"\n    },\n    d: \"M98.892,147.566c0,11.526,9.389,20.907,20.923,20.907c11.534,0,20.923-9.38,20.923-20.907 c0-4.495-3.642-8.129-8.129-8.129s-8.129,3.633-8.129,8.129c0,2.561-2.089,4.65-4.666,4.65c-2.569,0-4.666-2.089-4.666-4.65 c0-4.495-3.642-8.129-8.129-8.129S98.892,143.071,98.892,147.566z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#010002\"\n    },\n    d: \"M282.59,168.473c11.534,0,20.923-9.38,20.923-20.907c0-4.495-3.642-8.129-8.129-8.129 c-4.487,0-8.129,3.633-8.129,8.129c0,2.561-2.089,4.65-4.666,4.65c-2.577,0-4.666-2.089-4.666-4.65 c0-4.495-3.642-8.129-8.129-8.129c-4.487,0-8.129,3.633-8.129,8.129C261.667,159.092,271.055,168.473,282.59,168.473z\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null)), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgShoppingBag);\nexport default __webpack_public_path__ + \"static/media/shopping-bag.a688874f.svg\";\nexport { ForwardRef as ReactComponent };","import { createSelector } from 'reselect';\r\n\r\n//INPUT SELECTOR -- no usa create selector Son funciones que obtienen todo el estado y solo regresan una parte\r\n//esto se hace por convencion\r\nconst selectCart = (state) => state.cart; //ya con esto solo agarramos el state\r\n\r\n//el primer argumento son los input selectors y el segundo será una funcion de lo que queremos\r\n//regresar. Los argumentos que recibiremos iran en el orden de lo que regresa el selector\r\nexport const selectCartItems = createSelector([selectCart], (cart) => cart.cartItems);\r\n\r\n//lo que vamos haciendo es reducir la porción de estado que nos va llegando\r\nexport const selectCartItemsCount = createSelector([selectCartItems], (cartItems) =>\r\n    cartItems.reduce((sum, item) => sum + item.quantity, 0)\r\n);\r\n\r\nexport const selectCartHidden = createSelector([selectCart], (cart) => cart.hidden);\r\n\r\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\r\n    cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0)\r\n);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectUser = (state) => state.user;\r\n// const selectCart = state => state.cart;\r\n\r\n//en vez de ser argumentos, los puedes mandar como argumentos\r\n// export const selectCurrentUser = createSelector([selectUser, selectCart], (user, cart) => user.currentUser);\r\nexport const selectCurrentUser = createSelector([selectUser], (user) => user.currentUser);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\r\n//nos traemos nuestro selector\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\r\n\r\nimport './cart-icon.styles.scss';\r\nimport { ReactComponent as ShoppingIcon } from '../../assets/shopping-bag.svg';\r\n\r\n//con el dispatch ya nos llega la funcion como prop\r\nconst CartIcon = ({ toggleCartHidden, itemCount }) => {\r\n    return (\r\n        <div className='cart-icon' onClick={toggleCartHidden}>\r\n            <ShoppingIcon className='shopping-icon' />\r\n            <span className='item-count'>{itemCount}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = ({ cart: { cartItems } }) => ({\r\n//     itemCount: cartItems.reduce((sum, item) => (sum + item.quantity), 0),\r\n// });\r\n// const mapStateToProps = (state) => ({\r\n//     itemCount: selectCartItemsCount(state),\r\n// });\r\nconst mapStateToProps = createStructuredSelector({\r\n    itemCount: selectCartItemsCount,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    toggleCartHidden: () => dispatch(toggleCartHidden()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\r\n","import React from 'react';\r\n\r\nimport './cart-item.styles.scss';\r\n\r\nconst CartItem = ({ item: { imageUrl, price, name, quantity } }) => (\r\n    <div className='cart-item'>\r\n        <img src={imageUrl} alt='item' />\r\n        <div className='details-container'>\r\n            <span className='name'>{name}</span>\r\n            <span className='price'>\r\n                {quantity} x ${price}\r\n            </span>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport './cart-dropdown.styles.scss';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CartItem from '../cart-item/cart-item.component';\r\nimport { connect } from 'react-redux';\r\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\r\n\r\n//lo pasa por defecto\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => {\r\n    return (\r\n        <div className='cart-dropdown'>\r\n            <div className='cart-items'>\r\n                {\r\n                    //\r\n                    cartItems.length ? (\r\n                        cartItems.map((item) => {\r\n                            console.log(item);\r\n                            return <CartItem key={item.id} item={item} />;\r\n                        })\r\n                    ) : (\r\n                        <span className='empty-message'>Your cart is empty</span>\r\n                    )\r\n                }\r\n            </div>\r\n            <CustomButton\r\n                onClick={() => {\r\n                    history.push('/checkout');\r\n                    //le despachamos la accion creada, usamos el dispatch que entra por defecto\r\n                    dispatch(toggleCartHidden());\r\n                }}>\r\n                GO TO CHECKOUT\r\n            </CustomButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n});\r\n\r\n//si no ponemos explicitamente el mapdispatch to props connect ya nos pasa el dispatch como una prop\r\n\r\n//el orden importa, el router va a pasar los objetos al componente que ya nos hace el connect\r\n//se hace de adentro hacia afuera\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\r\n\r\n// import { connect } from 'react-redux';\r\n\r\n// const CartDropdown = ({ hidden }) => (\r\n//     <div>\r\n//         {hidden ? (\r\n//             null\r\n//         ) : (\r\n//             < className='cart-dropdown'>\r\n//                 <div className='cart-items'></div>\r\n//                 <CustomButton>GO TO CHECKOUT</CustomButton>\r\n//             </>\r\n//         )}\r\n//     </div>\r\n// );\r\n\r\n// const mapStateToProps = ({ cart }) => ({\r\n//     hidden: cart.hidden,\r\n// });\r\n\r\n// export default connect(mapStateToProps)(CartDropdown);\r\n","import styled, {css} from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const HeaderContainer = styled.div`\r\n    height: 70px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 25px;\r\n`\r\n// le pasamos el componente al que queremos que se cree \r\n//al aplicar el style\r\nexport const LogoContainer = styled(Link)`\r\n    height: 100%;\r\n    align-self: flex-start;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\n// con esto creamos una variable de css\r\nexport const OptionContainerStyles = css`\r\n    padding: 10px 15px;\r\n    cursor: pointer;\r\n`\r\n\r\nexport const OptionsContainer = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    cursor: pointer;\r\n`\r\n// esta es una forma cuando tienen el mismo código, en el código con as = \"div\" o as = {Link}\r\n// podemos reducir la cantidad de código y que sólo se use uno solo\r\nexport const OptionLink = styled(Link)`\r\n    ${OptionContainerStyles}\r\n`\r\nexport const OptionDiv = styled.div`\r\n    ${OptionContainerStyles}\r\n`\r\n\r\n// como no queremos duplicar el código de option","import React from 'react';\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\r\nimport './header.styles.scss';\r\nimport { auth } from '../../firebase/firebase.utils';\r\nimport { ReactComponent as Logo } from '../../assets/crown.svg';\r\n//para crear el structured selectot\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCartHidden } from '../../redux/cart/cart.selectors';\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\r\n\r\nimport CartIcon from '../cart-icon/cart-icon.component';\r\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\r\n\r\n//1.- importamos connect: es un componente de alto orden en el que envolvemos las cosas para tener acceso a redux\r\nimport { connect } from 'react-redux';\r\n\r\n// styled components css in js\r\nimport { HeaderContainer, LogoContainer, OptionsContainer, OptionDiv, OptionLink } from './header.styles.jsx';\r\n\r\n// le metemos la accion\r\nimport { signOutStart } from '../../redux/user/user.actions';\r\n\r\nconst Header = ({ currentUser, hidden, signOutStart }) => (\r\n    <HeaderContainer>\r\n        <LogoContainer to='/'>\r\n            <Logo className='logo' />\r\n            {currentUser ? <h3>{'Welcome ' + currentUser.displayName}</h3> : <div></div>}\r\n        </LogoContainer>\r\n        <OptionsContainer>\r\n            <OptionLink to='/shop'>SHOP</OptionLink>\r\n            <OptionLink to='/contact'>CONTACT</OptionLink>\r\n            {currentUser ? (\r\n                <OptionDiv onClick={signOutStart}>SIGN OUT</OptionDiv>\r\n            ) : (\r\n                <OptionLink to='/signin'>SIGN IN</OptionLink>\r\n            )}\r\n            <CartIcon />\r\n        </OptionsContainer>\r\n        {/* ahora necesitamos crear algo que nos permita ocultarlo */}\r\n        {hidden ? null : ( //con null ya no te sale nada porque si pones un div vacio por el space between todo se va alv\r\n            <CartDropdown />\r\n        )}\r\n    </HeaderContainer>\r\n);\r\n\r\n//con create structured selector\r\nconst mapStateToProps = createStructuredSelector({\r\n    //les pasa el estado actual de forma automatica\r\n    currentUser: selectCurrentUser,\r\n    hidden: selectCartHidden,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signOutStart: () => dispatch(signOutStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\n\r\nimport './form-input.styles.scss';\r\n\r\n//el handle change es para que se vaya para arriba\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => {\r\n    // console.log(otherProps.value.length);\r\n    return (\r\n        <div className='group'>\r\n            {/* las other props van a ser el nombre el tipo y si es requerido por ejemplo */}\r\n            <input className='form-input' onChange={handleChange} {...otherProps} />\r\n            {/* con esto ya que el user ha tipeado algo se agrega el shrink para que se haga chiqito */}\r\n            {label ? (\r\n                <label className={`form-input-label ${otherProps.value.length ? 'shrink' : ''}`}>{label}</label>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { useState } from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n    const [getCredentials, setCredentials] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = getCredentials;\r\n    const handleSubmit = (event) => {\r\n        console.log('im here');\r\n        event.preventDefault();\r\n\r\n        emailSignInStart(email, password);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        // console.log(event.target.value);\r\n        const { value, name } = event.target;\r\n\r\n        setCredentials({\r\n            ...getCredentials,\r\n            [name]: value,\r\n            // recordemos que podemos crear de forma dinamica las propiedades\r\n        });\r\n        // console.log(this.state);\r\n    };\r\n\r\n    return (\r\n        <div className='sign-in'>\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with email and password</span>\r\n\r\n            {/* recordemos que al subir una forma esta va a recargar la pagina por l que se debe de prevenir el evento por defecto */}\r\n            <form onSubmit={handleSubmit}>\r\n                {/* le pasamos la funcion a la que va a llamar cada que se active */}\r\n                <FormInput name='email' type='email' value={email} handleChange={handleChange} required label='Email' />\r\n                <FormInput\r\n                    name='password'\r\n                    type='password'\r\n                    value={password}\r\n                    // para que se pase el que va a manejar los cambios en el field\r\n                    handleChange={handleChange}\r\n                    required\r\n                    label='Password'\r\n                />\r\n                <div className='buttons'>\r\n                    {/* un boton puede tener el tipo submit tambien */}\r\n                    {/* <input type='submit' value='Sign In' /> */}\r\n                    {/* recordemos que al pasar mas jsx dentro de un componente le llega en una prop llamada children */}\r\n                    <CustomButton type='submit'>Sign In</CustomButton>\r\n\r\n                    {/* solo le agregas el sign in para que jale al funcion cuando le das click con un onclick */}\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n                        Sign In with google\r\n                    </CustomButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n","import React, { useState } from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = () => {\r\n    const [getCredentials, setCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    });\r\n\r\n    const { displayName, email, password, confirmPassword } = getCredentials;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            //crea un nuevo usuario asociado al email y al password, nos regresa un user auth object\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n            await createUserProfileDocument(user, { displayName });\r\n            setCredentials({\r\n                displayName: '',\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: '',\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        // console.log(event.target.value);\r\n        const { value, name } = event.target;\r\n\r\n        setCredentials({\r\n            // recordemos que el nombre de cada propiedad se puede computar en JS\r\n            ...getCredentials,\r\n            [name]: value,\r\n        });\r\n        // console.log(this.state);\r\n    };\r\n\r\n    return (\r\n        <div className='sign-up'>\r\n            <h2 className='title'>I do not have an account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    type='text'\r\n                    name='displayName'\r\n                    value={displayName}\r\n                    required\r\n                    label='Name'\r\n                    handleChange={handleChange}\r\n                />\r\n                <FormInput type='email' name='email' value={email} required label='Email' handleChange={handleChange} />\r\n                <FormInput\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    required\r\n                    label='Password'\r\n                    handleChange={handleChange}\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    required\r\n                    label='Confirm Password'\r\n                    handleChange={handleChange}\r\n                />\r\n                <CustomButton type='submit'>SIGN UP</CustomButton>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\nimport './sign-in-and-sign-up.styles.scss';\r\n\r\n//va a ser funcional para que el estado se mantenga en los componentes de menor jerarquia\r\nconst SignInAndSignOut = () => (\r\n    <div className='sign-in-and-sign-up'>\r\n        <SignIn />\r\n        <SignUp />\r\n    </div>\r\n);\r\n\r\nexport default SignInAndSignOut;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.actions';\r\n\r\nimport './checkout-item.styles.scss';\r\n\r\nconst CheckoutItem = ({\r\n    cartItem,\r\n    cartItem: { name, imageUrl, price, quantity, id },\r\n    clearItemFromCart,\r\n    increaseQuantity,\r\n    decreaseQuantity,\r\n}) => (\r\n    <div className='checkout-item'>\r\n        <div className='image-container'>\r\n            <img alt='item' src={imageUrl} />\r\n        </div>\r\n        {/* utf-8 dingbats -- caracteres y simbolos a partir de codigos, iconos de los que el browser esta enterado */}\r\n        <span className='name'>{name}</span>\r\n        <span className='quantity'>\r\n            <div className='arrow' onClick={() => decreaseQuantity(cartItem)}>\r\n                &#10094;\r\n            </div>\r\n            <span className='value'>{quantity}</span>\r\n            <div className='arrow' onClick={() => increaseQuantity(cartItem)}>\r\n                &#10095;\r\n            </div>\r\n        </span>\r\n        <span className='price'>{price}</span>\r\n        {/* recordemos que empieza con & y termina con ; */}\r\n        <div className='remove-button' onClick={() => clearItemFromCart(cartItem)}>\r\n            &#10005;\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    //el nombre con el que pones la propiedad es el nombre con el que llega a las props\r\n    clearItemFromCart: (item) => dispatch(clearItemFromCart(item)),\r\n    increaseQuantity: (item) => dispatch(addItem(item)),\r\n    decreaseQuantity: (item) => dispatch(removeItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\r\n","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\n// para requests\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n    //stripe va a querer el precio en centavos\r\n    const priceForStripe = price * 100;\r\n    const publishableKey =\r\n        'pk_test_51HiFIVFvjKAeBp1I8CDBmWjZ6tS9vh2gE3qxcQ4dwIgsP6iVbeEZDxCupThkRYivlLFxzX8jNt3Gk08qW45MAgkt00O6qIodne';\r\n\r\n    const onToken = (token) => {\r\n        axios({\r\n            // va a usar la url actual y le va a pegar el payment\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token: token,\r\n            },\r\n        })\r\n            .then((res) => {\r\n                alert('payment successful');\r\n            })\r\n            .catch((error) => {\r\n                console.log('error: ', JSON.parse(error));\r\n                alert('Payment rejected. Please check your payment information');\r\n            });\r\n    };\r\n\r\n    //con las propiedaddes que le metamos vamos a poder definir cómo queremos que sea\r\n    return (\r\n        <StripeCheckout\r\n            label='Pay now'\r\n            name='Crown clothing reworked'\r\n            billingAddress\r\n            shippingAddress\r\n            image=''\r\n            description={`Your total is $${price}`}\r\n            amount={priceForStripe}\r\n            panelLabel='Pay now'\r\n            // stripe va a manejar el exito de la transacción, con la callback de token vamos a saber que si fue\r\n            token={onToken}\r\n            stripeKey={publishableKey}\r\n        />\r\n    );\r\n};\r\n\r\nexport default StripeCheckoutButton;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors';\r\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\r\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\r\n\r\nimport './checkout.styles.scss';\r\n\r\nconst CheckoutPage = ({ cartItems, cartTotal }) => {\r\n    // console.log(cartTotal);\r\n    return (\r\n        <div className='checkout-page'>\r\n            <div className='checkout-header'>\r\n                <div className='header-block'>\r\n                    <span>Product</span>\r\n                </div>\r\n                <div className='header-block'>\r\n                    <span>Description</span>\r\n                </div>\r\n                <div className='header-block'>\r\n                    <span>Quantity</span>\r\n                </div>\r\n                <div className='header-block'>\r\n                    <span>Price</span>\r\n                </div>\r\n                <div className='header-block'>\r\n                    <span>Remove</span>\r\n                </div>\r\n            </div>\r\n            {cartItems.map((cartItem) => (\r\n                <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n            ))}\r\n            <div className='total'>\r\n                <span>Total: ${cartTotal}</span>\r\n            </div>\r\n            <div className='test-warning'>\r\n                *Please use the following test credit card for payments*\r\n                <br />\r\n                4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\r\n            </div>\r\n            <StripeCheckoutButton price={cartTotal} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    cartTotal: selectCartTotal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);\r\n","import './App.css';\nimport React, { useEffect } from 'react';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component.jsx';\nimport Header from './components/header/header.component.jsx';\nimport SignInAndSignOut from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx';\nimport CheckoutPage from './pages/checkout/checkout.component.jsx';\n\n// la función que creamos\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from './firebase/firebase.utils';\n//selectors\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\n\n//vamos a hacer que se redireccione cuando ya está signed in el user\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\n//conectar con redux y el store\nimport { connect } from 'react-redux';\n//importamos la accion que nos va a ayudar a cambiar el state\nimport { setCurrentUser } from './redux/user/user.actions';\n\n// para el persist\nimport { checkUserSession } from './redux/user/user.actions';\n\nconst App = ({ currentUser, checkUserSession }) => {\n    useEffect(() => {\n        checkUserSession();\n        // como ya habíamos comentado, el empty array es para que pase como un component did mount\n    }, [checkUserSession]);\n    // como es una funcion propiedad la podemos pasar porque no va a cambiar la funcion\n\n    return (\n        <div className='App'>\n            {/* <Header currentUser={this.state.currentUser} /> se lo quito porque ya está conectado al store */}\n            <Header />\n            <Switch>\n                <Route exact path='/' component={HomePage} />\n                {/* se lo quitamos porque el shop va a estar variando, cuando varian debemos removerlo */}\n                <Route path='/shop' component={ShopPage} />\n                {/* con esta determinas qué componente renderear */}\n                <Route\n                    exact\n                    path='/signin'\n                    // el render nos deja definir de forma dinámica qué queremos que se renderee y en su ugar va una\n                    //funcion que retornará el componente a renderear\n                    render={() => (currentUser ? <Redirect to='/' /> : <SignInAndSignOut />)}\n                />\n                <Route exact path='/checkout' component={CheckoutPage} />\n            </Switch>\n        </div>\n    );\n};\n\nconst mapStateToProps = createStructuredSelector({\n    currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    checkUserSession: () => dispatch(checkUserSession()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","//aqui se va a poner el nuevo componente de redux para que la app tenga acceso al reducer y va a ser el provide\nimport { Provider } from 'react-redux'; //es un componente padre de todo redux\n//hace que todo la app tenga acceso al redux, debe ser el papa de todo\n// import Store from './redux/store';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// se debe de poner desde aqui para que se pueda aplicar a toda la app sin que andes poniendolo siempre\nimport { BrowserRouter } from 'react-router-dom';\n\n//ahora hacemos que llegue el persist y el componente que le va a dar el nuevo contexto\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    // ya con esto toda la app a a tener acceso a la store\n    <Provider store={store}>\n        <BrowserRouter>\n            {/* la funcion del persistgate es delayear los datos hasta que la app haya cargado */}\n            <PersistGate persistor={persistor}>\n                {/* queemos que nuestra app siempre tenga acceso al persist */}\n                <App />\n            </PersistGate>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}